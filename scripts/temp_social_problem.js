const { ethers } = require('hardhat')
const c = require('./common.js')
const { getEnvAddr } = require('../env.js')
const addrs = getEnvAddr()

const fmt = ethers.utils.formatEther
const main = async () => {
    const sw = await ethers.getContractAt('SoulMetaSocialWelfare', addrs.socialWelfare)

    const activeDay = {
        '19167': 325,
        '19168': 520,
        '19169': 23,
        '19170': 6,
        '19172': 2,
        '19173': 8,
        '19174': 15,
        '19176': 1,
        '19177': 1,
        '19178': 3,
        '19180': 1,
        '19181': 2
    }
    const lingquMap = {
        '19167': [9, 81, 190, 207, 250, 252, 611, 753, 803, 835, 940, 1044, 1063, 1067],
        '19168': [6, 21, 26, 38, 82, 88, 106, 146, 149, 150, 153, 155, 157, 159, 160, 167, 216, 221, 253, 407, 408, 409, 417, 420, 424, 433, 436, 444, 449, 450, 452, 456, 457, 459, 464, 465, 466, 467, 470, 471, 472, 487, 488, 489, 496, 529, 530, 534, 537, 538, 539, 542, 569, 612, 613, 614, 652, 653, 654, 655, 656, 659, 671, 676, 678, 681, 698, 707, 713, 723, 725, 730, 737, 739, 741, 751, 752, 755, 756, 818, 870, 895, 920, 1042, 1069, 1071, 1074, 1112],
        '19169': [44, 66, 71, 74, 89, 90, 121, 195, 197, 214, 215, 234, 235, 236, 237, 238, 239, 267, 272, 304, 306, 352, 381, 382, 383, 384, 385, 386, 387, 419, 421, 422, 437, 439, 442, 445, 448, 451, 458, 461, 463, 469, 476, 477, 483, 485, 490, 497, 506, 557, 558, 559, 595, 600, 601, 610, 631, 633, 650, 703, 718, 721, 726, 736, 762, 763, 764, 765, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 911, 1078, 1080, 1094, 1098, 1109],
        '19170': [24, 67, 80, 635, 780, 800, 923, 1062, 1087, 1100],
        '19171': [189, 1038, 1097],
        '19172': [133, 139, 140, 141, 142, 143, 144, 158, 360, 366, 494, 766, 914, 916, 945, 968, 1070],
        '19173': [3, 79, 196, 314, 640, 677, 697, 711, 1076],
        '19174': [7, 25, 37, 91, 97, 161, 240, 380, 400, 401, 403, 404, 447, 503, 705, 709, 896, 906, 907, 1101, 1104, 1105],
        '19175': [33, 60, 76, 92, 127, 130, 131, 132, 134, 135, 136, 137, 138, 181, 242, 248, 256, 266, 300, 349, 371, 374, 377, 388, 395, 434, 435, 468, 502, 596, 603, 609, 619, 622, 634, 643, 644, 666, 680, 724, 801, 802, 805, 933, 1108, 1111, 1114],
        '19176': [46, 128, 199, 261, 262, 263, 372, 378, 389, 390, 391, 392, 394, 425, 598, 675, 696, 722, 840, 922, 1090, 1095, 1113],
        '19177': [29, 34, 49, 77, 113, 246, 347, 358, 373, 375, 423, 430, 431, 521, 568, 576, 582, 712, 714, 854, 921, 983, 1057, 1059, 1093, 1099],
        '19178': [1, 14, 63, 75, 83, 87, 95, 249, 255, 365, 379, 399, 438, 602, 648, 734, 838, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 988, 990, 991, 1012, 1047, 1061, 1096, 1118],
        '19179': [5, 15, 28, 42, 47, 51, 94, 96, 105, 125, 200, 201, 202, 205, 208, 241, 244, 245, 254, 260, 280, 281, 282, 283, 284, 285, 287, 292, 293, 297, 298, 301, 303, 307, 308, 309, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 353, 354, 355, 357, 363, 367, 368, 369, 462, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 523, 524, 527, 528, 532, 533, 535, 536, 540, 544, 546, 552, 556, 560, 563, 567, 573, 577, 594, 597, 599, 623, 636, 649, 669, 672, 704, 729, 732, 735, 738, 740, 761, 925, 942, 967, 1033, 1034, 1035, 1036, 1037, 1060, 1064, 1075, 1102, 1115, 1116, 1117],
        '19180': [45, 104, 166, 168, 171, 175, 194, 243, 264, 376, 410, 482, 491, 565, 572, 574, 578, 584, 585, 587, 588, 589, 604, 605, 607, 608, 615, 616, 617, 620, 621, 626, 627, 628, 629, 639, 647, 663, 670, 708, 716, 719, 743, 772, 797, 804, 816, 820, 831, 842, 844, 846, 849, 857, 858, 859, 861, 908, 909, 910, 913, 915, 917, 928, 929, 1039, 1043, 1072, 1077, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1092, 1103, 1106, 1107, 1110, 1119],
        '19181': [18, 39, 72, 85, 98, 99, 101, 102, 103, 108, 109, 110, 112, 114, 115, 116, 117, 119, 120, 148, 162, 165, 170, 192, 193, 203, 217, 225, 257, 258, 265, 277, 316, 370, 416, 428, 453, 454, 474, 475, 478, 481, 498, 515, 522, 531, 541, 543, 545, 547, 548, 549, 550, 551, 553, 554, 555, 561, 564, 570, 591, 592, 593, 637, 638, 641, 645, 679, 689, 695, 700, 702, 720, 754, 808, 809, 810, 811, 812, 813, 814, 815, 817, 819, 821, 822, 823, 824, 825, 826, 827, 828, 843, 865, 866, 867, 868, 892, 897, 898, 899, 900, 901, 902, 903, 904, 905, 912, 934, 935, 936, 937, 938, 946, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 960, 961, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1049, 1053, 1079],
        '19182': [16, 19, 27, 40, 59, 68, 73, 86, 118, 122, 124, 126, 163, 184, 209, 210, 211, 212, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 251, 259, 270, 273, 274, 275, 276, 279, 286, 288, 290, 291, 294, 295, 299, 302, 323, 324, 325, 359, 396, 397, 398, 406, 411, 412, 413, 426, 455, 473, 480, 486, 492, 499, 501, 504, 562, 571, 581, 606, 618, 632, 657, 658, 662, 668, 674, 690, 715, 733, 742, 744, 760, 798, 799, 807, 829, 830, 832, 833, 834, 836, 837, 839, 841, 845, 847, 848, 850, 851, 852, 853, 855, 856, 860, 862, 863, 864, 926, 927, 930, 931, 969, 970, 971, 985, 986, 987, 989, 1040, 1041, 1051, 1054, 1055, 1056, 1058, 1065, 1066]
    }

    const totalActived = {}
    let sum = 0
    for (let i = 19167; i <= 19185; i++) {
        sum += activeDay[i] ? activeDay[i] : 0
        totalActived[i] = sum
    }
    // console.log(totalActived)

    let balance = ethers.utils.parseEther('6233.7')
    const yaofendeqian = {}
    for (let i = 19167; i <= 19184; i++) {
        yaofendeqian[i] = balance.mul(20).div(100)
        balance = balance.sub(balance.mul(20).div(100))
    }

    // 每天份额
    const mtfe = { '19167': ethers.BigNumber.from(0) }
    let totalFE = ethers.BigNumber.from(0)
    for (let i = 19167; i <= 19184; i++) {
        totalFE = totalFE.add(yaofendeqian[i].div(totalActived[i]))
        mtfe[i] = totalFE
    }
    // for (let [k, v] of Object.entries(mtfe)) {
    //     console.log(k, ethers.utils.formatEther(v))
    // }


    let socialTotal = ethers.BigNumber.from(0)
    for (let i = 19167; i <= 19184; i++) {
        socialTotal = socialTotal.add(yaofendeqian[i])
    }
    const data = [
        19185,
        yaofendeqian[19184],
        yaofendeqian[19184],
        mtfe[19184],
        mtfe[19184].sub(mtfe[19183]),
        907,
        907,
        socialTotal
    ]
    console.log([
        19185,
        fmt(yaofendeqian[19184]),
        fmt(yaofendeqian[19184]),
        fmt(mtfe[19184]),
        fmt(mtfe[19184].sub(mtfe[19183])),
        907,
        907,
        fmt(socialTotal)
    ])
    // await sw.setWelfareData(...data)
    // await sw.addAmount(ethers.utils.parseEther('6233.7'))

    const ids = []
    const shares = []

    for (let day = 19167; day <= 19182; day++) {
        for (let tokenId of lingquMap[day]) {
            ids.push(tokenId)
            shares.push(mtfe[19184])
        }
    }


    const SPLIT = 100
    for (let i = 0; i < ids.length / SPLIT; i++) {
        // console.log(ids.slice(i * SPLIT, (i + 1) * SPLIT))
        // console.log(shares.slice(i * SPLIT, (i + 1) * SPLIT))
        const gas = await sw.setCurrentShare(
            ids.slice(i * SPLIT, (i + 1) * SPLIT),
            mtfe[19184],
        )
        console.log(ids.length,  gas.eq ? gas : '')
    }

    let mySUM = ethers.BigNumber.from(0)
    for (let item of shares) {
        mySUM = mySUM.add(mtfe[19184].sub(item))
    }
    console.log(fmt(mySUM))

    console.log('~~~~~~~~~~~~~ Task Done ~~~~~~~~~~~~~')
}

main().then(() => process.exit(0)).catch((error) => {
    console.error(error)
    process.exit(1)
})

